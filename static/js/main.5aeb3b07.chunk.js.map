{"version":3,"sources":["components/General.js","components/Education.js","components/Practical.js","index.js"],"names":["General","handleChange","e","target","value","name","setState","submitData","preventDefault","checkInput","submit","editButton","state","email","number","summary","nameInput","document","getElementById","emailInput","numberInput","length","isNaN","this","id","className","onClick","onSubmit","onChange","type","placeholder","Component","Education","submitEdit","obj","school","title","beginDate","endDate","array","saved","splice","editindex","forms","educations","map","element","editEducation","deleteEducation","uniqid","empty","index","indexOf","submitForm","createForm","addForm","schoolInput","titleInput","beginDateInput","endDateInput","Practical","company","position","description","beginYear","endYear","jobs","editJob","deleteJob","console","log","min","max","companyInput","positionInput","descriptionInput","beginYearInput","endYearInput","ReactDOM","render","StrictMode"],"mappings":"0NAmHeA,E,kDAhHb,aAAe,IAAD,8BACZ,gBAUFC,aAAe,SAACC,GACd,IAAMC,EAASD,EAAEC,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,SAAL,eACGD,EAAOD,KAjBE,EAqCdG,WAAa,SAACL,GACZA,EAAEM,iBACE,EAAKC,cACP,EAAKH,SAAS,CAAEI,OAAQ,KAxCd,EA4CdC,WAAa,WACX,EAAKL,SAAS,CAAEI,OAAQ,KA3CxB,EAAKE,MAAQ,CACXP,KAAM,GACNQ,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTL,OAAQ,GAPE,E,yDAsBZ,IAAMM,EAAYC,SAASC,eAAe,QACpCC,EAAaF,SAASC,eAAe,SACrCE,EAAcH,SAASC,eAAe,UAC5C,OAC6B,IAA3BF,EAAUZ,MAAMiB,QACY,IAA5BF,EAAWf,MAAMiB,QACY,IAA7BD,EAAYhB,MAAMiB,SACW,IAA7BC,MAAMF,EAAYhB,S,+BAoBpB,OAAKmB,KAAKX,MAAMF,OA0CZ,sBAAKc,GAAG,UAAUC,UAAU,YAA5B,UACE,qDACA,8BACE,qCADF,KACgBF,KAAKX,MAAMP,QAE3B,8BACE,uCADF,KACkBkB,KAAKX,MAAMC,SAE7B,8BACE,6CADF,KACwBU,KAAKX,MAAME,UAEnC,mBAAGU,GAAG,UAAN,SAAiBD,KAAKX,MAAMG,UAC5B,wBAAQW,QAASH,KAAKZ,WAAYa,GAAG,OAArC,qBApDF,sBAAKA,GAAG,UAAUC,UAAU,YAA5B,UACE,qDACA,uBAAME,SAAUJ,KAAKhB,WAArB,UACE,uBACEF,KAAK,OACLuB,SAAUL,KAAKtB,aACfG,MAAOmB,KAAKX,MAAMP,KAClBwB,KAAK,OACLL,GAAG,OACHM,YAAY,SAEd,uBACEzB,KAAK,QACLuB,SAAUL,KAAKtB,aACfG,MAAOmB,KAAKX,MAAMC,MAClBgB,KAAK,QACLL,GAAG,QACHM,YAAY,WAEd,uBACEzB,KAAK,SACLuB,SAAUL,KAAKtB,aACfG,MAAOmB,KAAKX,MAAME,OAClBe,KAAK,MACLL,GAAG,SACHM,YAAY,iBAEd,0BACEzB,KAAK,UACLuB,SAAUL,KAAKtB,aACfG,MAAOmB,KAAKX,MAAMG,QAClBS,GAAG,UACHM,YAAY,mBAEd,wBAAQD,KAAK,SAAb,8B,GAtFUE,a,uBCiRPC,E,kDA/Qb,aAAe,IAAD,8BACZ,gBAaF/B,aAAe,SAACC,GACd,IAAMC,EAASD,EAAEC,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,SAAL,eACGD,EAAOD,KApBE,EAwBd6B,WAAa,SAAC/B,GAEZ,GADAA,EAAEM,iBACE,EAAKC,aAAT,CACE,IAAIyB,EAAM,GACVA,EAAIC,OAAS,EAAKvB,MAAMuB,OACxBD,EAAIE,MAAQ,EAAKxB,MAAMwB,MACvBF,EAAIG,UAAY,EAAKzB,MAAMyB,UAC3BH,EAAII,QAAU,EAAK1B,MAAM0B,QACzB,IAAIC,EAAQ,EAAK3B,MAAM4B,MACvBD,EAAME,OAAO,EAAK7B,MAAM8B,UAAW,EAAGR,GACtC,EAAK5B,SAAS,CACZkC,MAAOD,EACPJ,OAAQ,GACRC,MAAO,GACPC,UAAW,GACXC,QAAS,GACTK,MAAO,GACPC,WAAYL,EAAMM,KAAI,SAACC,GACrB,OACE,sBAAoBrB,UAAU,MAA9B,UACE,8BACE,4CADF,KACuBqB,EAAQX,UAE/B,8BACE,sCADF,KACiBW,EAAQV,SAEzB,8BACE,2CADF,KACsBU,EAAQT,aAE9B,8BACE,4CADF,KACuBS,EAAQR,WAE/B,wBACEZ,QAAS,kBACP,EAAKpB,SAAS,CACZqC,MAAO,EAAKI,cAAcD,MAHhC,kBASA,wBACEpB,QAAS,WACP,EAAKsB,gBAAgBF,IAFzB,sBAtBQG,cA3CN,EAiFdC,MAAQ,WACN,OAAO,uBAlFK,EAqFdF,gBAAkB,SAACF,GACjB,IAAIK,EAAQ,EAAKvC,MAAMgC,WAAWQ,QAAQN,GACL,IAAjC,EAAKlC,MAAMgC,WAAWvB,OACxB,EAAKf,SAAS,CACZkC,MAAO,EAAK5B,MAAM4B,MAAMC,OAAOU,EAAO,GACtCP,WAAY,EAAKhC,MAAMgC,WAAWH,OAAOU,EAAO,KAGlD,EAAK7C,SAAS,CACZkC,MAAO,GACPI,WAAY,EAAKM,WA/FT,EAoGdH,cAAgB,SAACD,GACf,IAAIK,EAAQ,EAAKvC,MAAMgC,WAAWQ,QAAQN,GAI1C,OAHA,EAAKxC,SAAS,CACZoC,UAAWS,IAGX,uBAAM1B,UAAU,MAAqBE,SAAU,EAAKM,WAApD,UACE,gDACA,uBACEL,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,SACLmB,GAAG,SACHM,YAAY,gBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,QACLmB,GAAG,QACHM,YAAY,UAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,YACLmB,GAAG,YACHM,YAAY,mBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,UACLmB,GAAG,UACHM,YAAY,gBAEd,wBAAQD,KAAK,SAAb,sBA9ByBoB,QA1GjB,EA6IdI,WAAa,SAACnD,GAEZ,GADAA,EAAEM,iBACE,EAAKC,aAAT,CACE,IAAIyB,EAAM,GACVA,EAAIC,OAAS,EAAKvB,MAAMuB,OACxBD,EAAIE,MAAQ,EAAKxB,MAAMwB,MACvBF,EAAIG,UAAY,EAAKzB,MAAMyB,UAC3BH,EAAII,QAAU,EAAK1B,MAAM0B,QACzB,IAAIC,EAAK,sBAAO,EAAK3B,MAAM4B,OAAlB,CAAyBN,IAClC,EAAK5B,SAAS,CACZkC,MAAM,GAAD,mBAAM,EAAK5B,MAAM4B,OAAjB,CAAwBN,IAC7BC,OAAQ,GACRC,MAAO,GACPC,UAAW,GACXC,QAAS,GACTK,MAAO,GACPC,WAAYL,EAAMM,KAAI,SAACC,GACrB,OACE,sBAAoBrB,UAAU,MAA9B,UACE,8BACE,4CADF,KACuBqB,EAAQX,UAE/B,8BACE,sCADF,KACiBW,EAAQV,SAEzB,8BACE,2CADF,KACsBU,EAAQT,aAE9B,8BACE,4CADF,KACuBS,EAAQR,WAE/B,wBACEZ,QAAS,kBACP,EAAKpB,SAAS,CACZqC,MAAO,EAAKI,cAAcD,MAHhC,kBASA,wBACEpB,QAAS,WACP,EAAKsB,gBAAgBF,IAFzB,sBAtBQG,cA/JN,EAsNdK,WAAa,WACX,OACE,uBAAM7B,UAAU,MAAqBE,SAAU,EAAK0B,WAApD,UACE,mDACA,uBACEzB,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,SACLmB,GAAG,SACHM,YAAY,gBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,QACLmB,GAAG,QACHM,YAAY,UAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,YACLmB,GAAG,YACHM,YAAY,mBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,UACLmB,GAAG,UACHM,YAAY,gBAEd,wBAAQD,KAAK,SAAb,sBA9ByBoB,QAxNjB,EA2PdM,QAAU,WACR,EAAKjD,SAAS,CACZqC,MAAO,CAAC,EAAKW,iBA3Pf,EAAK1C,MAAQ,CACXuB,OAAQ,GACRC,MAAO,GACPC,UAAW,GACXC,QAAS,GACTE,MAAO,GACPI,WAAY,GACZD,MAAO,GACPD,UAAW,GAVD,E,yDAsMZ,IAAMc,EAAcvC,SAASC,eAAe,UACtCuC,EAAaxC,SAASC,eAAe,SACrCwC,EAAiBzC,SAASC,eAAe,aACzCyC,EAAe1C,SAASC,eAAe,WAC7C,OAC+B,IAA7BsC,EAAYpD,MAAMiB,QACU,IAA5BoC,EAAWrD,MAAMiB,QACe,IAAhCqC,EAAetD,MAAMiB,QACS,IAA9BsC,EAAavD,MAAMiB,S,+BAoDrB,OACE,sBAAKG,GAAG,YAAYC,UAAU,YAA9B,UACE,sDACCF,KAAKX,MAAMgC,WACXrB,KAAKX,MAAM+B,MACZ,wBAAQnB,GAAG,MAAME,QAASH,KAAKgC,QAA/B,sB,GAxQgBxB,aCqTT6B,E,kDApTb,aAAe,IAAD,8BACZ,gBAiCF3D,aAAe,SAACC,GACd,IAAMC,EAASD,EAAEC,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,SAAL,eACGD,EAAOD,KAxCE,EA4CdiD,WAAa,SAACnD,GAEZ,GADAA,EAAEM,iBACE,EAAKC,aAAT,CACE,IAAIyB,EAAM,GACVA,EAAI2B,QAAU,EAAKjD,MAAMiD,QACzB3B,EAAI4B,SAAW,EAAKlD,MAAMkD,SAC1B5B,EAAI6B,YAAc,EAAKnD,MAAMmD,YAC7B7B,EAAI8B,UAAY,EAAKpD,MAAMoD,UAC3B9B,EAAI+B,QAAU,EAAKrD,MAAMqD,QACzB,IAAI1B,EAAK,sBAAO,EAAK3B,MAAM4B,OAAlB,CAAyBN,IAClC,EAAK5B,SAAS,CACZkC,MAAM,GAAD,mBAAM,EAAK5B,MAAM4B,OAAjB,CAAwBN,IAC7B2B,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTtB,MAAO,GACPuB,KAAM3B,EAAMM,KAAI,SAACC,GACf,IAAIK,EAAQZ,EAAMa,QAAQN,GAC1B,OACE,sBAAoBrB,UAAU,MAA9B,UACE,8BACE,6CADF,KACwBqB,EAAQe,WAEhC,8BACE,yCADF,KACoBf,EAAQgB,YAE5B,8BACE,4CADF,KACuBhB,EAAQiB,eAE/B,8BACE,8CADF,KACyBjB,EAAQkB,aAEjC,8BACE,4CADF,KACuBlB,EAAQmB,WAE/B,wBACEvC,QAAS,kBACP,EAAKpB,SAAS,CACZqC,MAAO,EAAKwB,QAAQhB,MAH1B,kBASA,wBACEzB,QAAS,WACP,EAAK0C,UAAUjB,IAFnB,sBAzBQF,cAjEN,EA0GdC,MAAQ,WACN,OAAO,uBA3GK,EA8GdkB,UAAY,SAACtB,GACX,IAAIK,EAAQ,EAAKvC,MAAMsD,KAAKd,QAAQN,GACL,IAA3B,EAAKlC,MAAMsD,KAAK7C,OAClB,EAAKf,SAAS,CACZkC,MAAO,EAAK5B,MAAM4B,MAAMC,OAAOU,EAAO,GACtCe,KAAM,EAAKtD,MAAMsD,KAAKzB,OAAOU,EAAO,KAGtC,EAAK7C,SAAS,CACZkC,MAAO,GACP0B,KAAM,EAAKhB,WAxHH,EA6HdjB,WAAa,SAAC/B,GAEZ,GADAA,EAAEM,iBACE,EAAKC,aAAT,CACE,IAAIyB,EAAM,GACVA,EAAI2B,QAAU,EAAKjD,MAAMiD,QACzB3B,EAAI4B,SAAW,EAAKlD,MAAMkD,SAC1B5B,EAAI6B,YAAc,EAAKnD,MAAMmD,YAC7B7B,EAAI8B,UAAY,EAAKpD,MAAMoD,UAC3B9B,EAAI+B,QAAU,EAAKrD,MAAMqD,QACzB,IAAI1B,EAAQ,EAAK3B,MAAM4B,MACvB6B,QAAQC,IAAI,EAAK1D,MAAM4B,MAAOD,GAC9B,IAAIY,EAAQZ,EAAMa,QAAQ,EAAKxC,MAAM8B,WACrC2B,QAAQC,IAAI/B,EAAOY,GACnBZ,EAAME,OAAOU,EAAO,EAAGjB,GACvBmC,QAAQC,IAAI/B,GACZ,EAAKjC,SAAS,CACZkC,MAAOD,EACPsB,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTtB,MAAO,GACPuB,KAAM3B,EAAMM,KAAI,SAACC,GACf,OACE,sBAAoBrB,UAAU,MAA9B,UACE,8BACE,6CADF,KACwBqB,EAAQe,WAEhC,8BACE,yCADF,KACoBf,EAAQgB,YAE5B,8BACE,4CADF,KACuBhB,EAAQiB,eAE/B,8BACE,8CADF,KACyBjB,EAAQkB,aAEjC,8BACE,4CADF,KACuBlB,EAAQmB,WAE/B,wBACEvC,QAAS,kBACP,EAAKpB,SAAS,CACZqC,MAAO,EAAKwB,QAAQrB,MAH1B,kBASA,wBACEpB,QAAS,WACP,EAAK0C,UAAUtB,IAFnB,sBAzBQG,cAtJN,EA+LdkB,QAAU,SAACrB,GAIT,OAHA,EAAKxC,SAAS,CACZoC,UAAWI,IAGX,uBAAMrB,UAAU,MAAqBE,SAAU,EAAKM,WAApD,UACE,0CACA,uBACEL,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,UACLmB,GAAG,UACHM,YAAY,iBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,WACLmB,GAAG,WACHM,YAAY,aAEd,0BACEF,SAAU,EAAK3B,aACfI,KAAK,cACLmB,GAAG,cACHM,YAAY,4BAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,SACL0C,IAAI,OACJC,IAAI,OACJnE,KAAK,YACLmB,GAAG,YACHM,YAAY,mBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,SACL0C,IAAI,OACJC,IAAI,OACJnE,KAAK,UACLmB,GAAG,UACHM,YAAY,gBAEd,wBAAQD,KAAK,SAAb,sBAxCyBoB,QApMjB,EAiPdK,WAAa,WACX,OACE,uBAAM7B,UAAU,MAAqBE,SAAU,EAAK0B,WAApD,UACE,6CACA,uBACEzB,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,UACLmB,GAAG,UACHM,YAAY,iBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,OACLxB,KAAK,WACLmB,GAAG,WACHM,YAAY,aAEd,0BACEF,SAAU,EAAK3B,aACfI,KAAK,cACLmB,GAAG,cACHM,YAAY,4BAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,SACL0C,IAAI,OACJC,IAAI,OACJnE,KAAK,YACLmB,GAAG,YACHM,YAAY,mBAEd,uBACEF,SAAU,EAAK3B,aACf4B,KAAK,SACL0C,IAAI,OACJC,IAAI,OACJnE,KAAK,UACLmB,GAAG,UACHM,YAAY,gBAEd,wBAAQD,KAAK,SAAb,sBAxCyBoB,QAnPjB,EAgSdM,QAAU,WACR,EAAKjD,SAAS,CACZqC,MAAO,CAAC,EAAKW,iBAhSf,EAAK1C,MAAQ,CACX+B,MAAO,GACPH,MAAO,GACP0B,KAAM,GACNL,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTvB,UAAW,GAXD,E,yDAgBZ,IAAM+B,EAAexD,SAASC,eAAe,WACvCwD,EAAgBzD,SAASC,eAAe,YACxCyD,EAAmB1D,SAASC,eAAe,eAC3C0D,EAAiB3D,SAASC,eAAe,aACzC2D,EAAe5D,SAASC,eAAe,WAC7C,OACgC,IAA9BuD,EAAarE,MAAMiB,QACY,IAA/BqD,EAActE,MAAMiB,QACc,IAAlCsD,EAAiBvE,MAAMiB,QACS,IAAhCuD,EAAexE,MAAMiB,QACS,IAA9BwD,EAAazE,MAAMiB,S,+BA6QrB,OACE,sBAAKG,GAAG,YAAYC,UAAU,YAA9B,UACE,uDACCF,KAAKX,MAAMsD,KACX3C,KAAKX,MAAM+B,MACZ,wBAAQnB,GAAG,MAAME,QAASH,KAAKgC,QAA/B,sB,GA7SgBxB,a,MCIxB+C,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,iCACE,8CAEF,sBAAKxD,GAAG,UAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAGJP,SAASC,eAAe,W","file":"static/js/main.5aeb3b07.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass General extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      number: \"\",\r\n      summary: \"\",\r\n      submit: 0,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  checkInput() {\r\n    const nameInput = document.getElementById(\"name\");\r\n    const emailInput = document.getElementById(\"email\");\r\n    const numberInput = document.getElementById(\"number\");\r\n    if (\r\n      nameInput.value.length === 0 ||\r\n      emailInput.value.length === 0 ||\r\n      numberInput.value.length === 0 ||\r\n      isNaN(numberInput.value) === true\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  submitData = (e) => {\r\n    e.preventDefault();\r\n    if (this.checkInput()) {\r\n      this.setState({ submit: 1 });\r\n    }\r\n  };\r\n\r\n  editButton = () => {\r\n    this.setState({ submit: 0 });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.submit) {\r\n      return (\r\n        <div id=\"general\" className=\"component\">\r\n          <h2>General information</h2>\r\n          <form onSubmit={this.submitData}>\r\n            <input\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n              type=\"text\"\r\n              id=\"name\"\r\n              placeholder=\"Name\"\r\n            ></input>\r\n            <input\r\n              name=\"email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"E-Mail\"\r\n            ></input>\r\n            <input\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              type=\"tel\"\r\n              id=\"number\"\r\n              placeholder=\"Phone Number\"\r\n            ></input>\r\n            <textarea\r\n              name=\"summary\"\r\n              onChange={this.handleChange}\r\n              value={this.state.summary}\r\n              id=\"summary\"\r\n              placeholder=\"About yourself\"\r\n            ></textarea>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div id=\"general\" className=\"component\">\r\n          <h2>General information</h2>\r\n          <p>\r\n            <u>Name</u>: {this.state.name}\r\n          </p>\r\n          <p>\r\n            <u>E-Mail</u>: {this.state.email}\r\n          </p>\r\n          <p>\r\n            <u>Phone number</u>: {this.state.number}\r\n          </p>\r\n          <p id=\"summary\">{this.state.summary}</p>\r\n          <button onClick={this.editButton} id=\"edit\">\r\n            Edit\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default General;\r\n","import React, { Component } from \"react\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass Education extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      school: \"\",\r\n      title: \"\",\r\n      beginDate: \"\",\r\n      endDate: \"\",\r\n      saved: [],\r\n      educations: [],\r\n      forms: [],\r\n      editindex: 0,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitEdit = (e) => {\r\n    e.preventDefault();\r\n    if (this.checkInput()) {\r\n      let obj = {};\r\n      obj.school = this.state.school;\r\n      obj.title = this.state.title;\r\n      obj.beginDate = this.state.beginDate;\r\n      obj.endDate = this.state.endDate;\r\n      let array = this.state.saved;\r\n      array.splice(this.state.editindex, 1, obj);\r\n      this.setState({\r\n        saved: array,\r\n        school: \"\",\r\n        title: \"\",\r\n        beginDate: \"\",\r\n        endDate: \"\",\r\n        forms: [],\r\n        educations: array.map((element) => {\r\n          return (\r\n            <div key={uniqid()} className=\"edu\">\r\n              <p>\r\n                <u>School name</u>: {element.school}\r\n              </p>\r\n              <p>\r\n                <u>Study</u>: {element.title}\r\n              </p>\r\n              <p>\r\n                <u>Begin date</u>: {element.beginDate}\r\n              </p>\r\n              <p>\r\n                <u>Ending date</u>: {element.endDate}\r\n              </p>\r\n              <button\r\n                onClick={() =>\r\n                  this.setState({\r\n                    forms: this.editEducation(element),\r\n                  })\r\n                }\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.deleteEducation(element);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          );\r\n        }),\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  empty = () => {\r\n    return <p></p>;\r\n  };\r\n\r\n  deleteEducation = (element) => {\r\n    let index = this.state.educations.indexOf(element);\r\n    if (this.state.educations.length !== 1) {\r\n      this.setState({\r\n        saved: this.state.saved.splice(index, 1),\r\n        educations: this.state.educations.splice(index, 1),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        saved: [],\r\n        educations: this.empty(),\r\n      });\r\n    }\r\n  };\r\n\r\n  editEducation = (element) => {\r\n    let index = this.state.educations.indexOf(element);\r\n    this.setState({\r\n      editindex: index,\r\n    });\r\n    return (\r\n      <form className=\"new\" key={uniqid()} onSubmit={this.submitEdit}>\r\n        <h3>Edit Education</h3>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"school\"\r\n          id=\"school\"\r\n          placeholder=\"School Name\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"Study\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"date\"\r\n          name=\"beginDate\"\r\n          id=\"beginDate\"\r\n          placeholder=\"Beginning Date\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"date\"\r\n          name=\"endDate\"\r\n          id=\"endDate\"\r\n          placeholder=\"Ending Date\"\r\n        ></input>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (this.checkInput()) {\r\n      let obj = {};\r\n      obj.school = this.state.school;\r\n      obj.title = this.state.title;\r\n      obj.beginDate = this.state.beginDate;\r\n      obj.endDate = this.state.endDate;\r\n      let array = [...this.state.saved, obj];\r\n      this.setState({\r\n        saved: [...this.state.saved, obj],\r\n        school: \"\",\r\n        title: \"\",\r\n        beginDate: \"\",\r\n        endDate: \"\",\r\n        forms: [],\r\n        educations: array.map((element) => {\r\n          return (\r\n            <div key={uniqid()} className=\"edu\">\r\n              <p>\r\n                <u>School name</u>: {element.school}\r\n              </p>\r\n              <p>\r\n                <u>Study</u>: {element.title}\r\n              </p>\r\n              <p>\r\n                <u>Begin date</u>: {element.beginDate}\r\n              </p>\r\n              <p>\r\n                <u>Ending date</u>: {element.endDate}\r\n              </p>\r\n              <button\r\n                onClick={() =>\r\n                  this.setState({\r\n                    forms: this.editEducation(element),\r\n                  })\r\n                }\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.deleteEducation(element);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          );\r\n        }),\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  checkInput() {\r\n    const schoolInput = document.getElementById(\"school\");\r\n    const titleInput = document.getElementById(\"title\");\r\n    const beginDateInput = document.getElementById(\"beginDate\");\r\n    const endDateInput = document.getElementById(\"endDate\");\r\n    if (\r\n      schoolInput.value.length === 0 ||\r\n      titleInput.value.length === 0 ||\r\n      beginDateInput.value.length === 0 ||\r\n      endDateInput.value.length === 0\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  createForm = () => {\r\n    return (\r\n      <form className=\"new\" key={uniqid()} onSubmit={this.submitForm}>\r\n        <h3>Add new education</h3>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"school\"\r\n          id=\"school\"\r\n          placeholder=\"School Name\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          placeholder=\"Study\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"date\"\r\n          name=\"beginDate\"\r\n          id=\"beginDate\"\r\n          placeholder=\"Beginning Date\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"date\"\r\n          name=\"endDate\"\r\n          id=\"endDate\"\r\n          placeholder=\"Ending Date\"\r\n        ></input>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  addForm = () => {\r\n    this.setState({\r\n      forms: [this.createForm()],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"education\" className=\"component\">\r\n        <h2>Education experience</h2>\r\n        {this.state.educations}\r\n        {this.state.forms}\r\n        <button id=\"add\" onClick={this.addForm}>\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Education;\r\n","import React, { Component } from \"react\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass Practical extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      forms: [],\r\n      saved: [],\r\n      jobs: [],\r\n      company: \"\",\r\n      position: \"\",\r\n      description: \"\",\r\n      beginYear: \"\",\r\n      endYear: \"\",\r\n      editindex: 0,\r\n    };\r\n  }\r\n\r\n  checkInput() {\r\n    const companyInput = document.getElementById(\"company\");\r\n    const positionInput = document.getElementById(\"position\");\r\n    const descriptionInput = document.getElementById(\"description\");\r\n    const beginYearInput = document.getElementById(\"beginYear\");\r\n    const endYearInput = document.getElementById(\"endYear\");\r\n    if (\r\n      companyInput.value.length === 0 ||\r\n      positionInput.value.length === 0 ||\r\n      descriptionInput.value.length === 0 ||\r\n      beginYearInput.value.length === 0 ||\r\n      endYearInput.value.length === 0\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (this.checkInput()) {\r\n      let obj = {};\r\n      obj.company = this.state.company;\r\n      obj.position = this.state.position;\r\n      obj.description = this.state.description;\r\n      obj.beginYear = this.state.beginYear;\r\n      obj.endYear = this.state.endYear;\r\n      let array = [...this.state.saved, obj];\r\n      this.setState({\r\n        saved: [...this.state.saved, obj],\r\n        company: \"\",\r\n        position: \"\",\r\n        description: \"\",\r\n        beginYear: \"\",\r\n        endYear: \"\",\r\n        forms: [],\r\n        jobs: array.map((element) => {\r\n          let index = array.indexOf(element);\r\n          return (\r\n            <div key={uniqid()} className=\"job\">\r\n              <p>\r\n                <u>Company name</u>: {element.company}\r\n              </p>\r\n              <p>\r\n                <u>Position</u>: {element.position}\r\n              </p>\r\n              <p>\r\n                <u>Description</u>: {element.description}\r\n              </p>\r\n              <p>\r\n                <u>Starting year</u>: {element.beginYear}\r\n              </p>\r\n              <p>\r\n                <u>Ending Year</u>: {element.endYear}\r\n              </p>\r\n              <button\r\n                onClick={() =>\r\n                  this.setState({\r\n                    forms: this.editJob(index),\r\n                  })\r\n                }\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.deleteJob(index);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          );\r\n        }),\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  empty = () => {\r\n    return <p></p>;\r\n  };\r\n\r\n  deleteJob = (element) => {\r\n    let index = this.state.jobs.indexOf(element);\r\n    if (this.state.jobs.length !== 1) {\r\n      this.setState({\r\n        saved: this.state.saved.splice(index, 1),\r\n        jobs: this.state.jobs.splice(index, 1),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        saved: [],\r\n        jobs: this.empty(),\r\n      });\r\n    }\r\n  };\r\n\r\n  submitEdit = (e) => {\r\n    e.preventDefault();\r\n    if (this.checkInput()) {\r\n      let obj = {};\r\n      obj.company = this.state.company;\r\n      obj.position = this.state.position;\r\n      obj.description = this.state.description;\r\n      obj.beginYear = this.state.beginYear;\r\n      obj.endYear = this.state.endYear;\r\n      let array = this.state.saved;\r\n      console.log(this.state.saved, array);\r\n      let index = array.indexOf(this.state.editindex);\r\n      console.log(array, index);\r\n      array.splice(index, 1, obj);\r\n      console.log(array);\r\n      this.setState({\r\n        saved: array,\r\n        company: \"\",\r\n        position: \"\",\r\n        description: \"\",\r\n        beginYear: \"\",\r\n        endYear: \"\",\r\n        forms: [],\r\n        jobs: array.map((element) => {\r\n          return (\r\n            <div key={uniqid()} className=\"job\">\r\n              <p>\r\n                <u>Company name</u>: {element.company}\r\n              </p>\r\n              <p>\r\n                <u>Position</u>: {element.position}\r\n              </p>\r\n              <p>\r\n                <u>Description</u>: {element.description}\r\n              </p>\r\n              <p>\r\n                <u>Starting year</u>: {element.beginYear}\r\n              </p>\r\n              <p>\r\n                <u>Ending Year</u>: {element.endYear}\r\n              </p>\r\n              <button\r\n                onClick={() =>\r\n                  this.setState({\r\n                    forms: this.editJob(element),\r\n                  })\r\n                }\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.deleteJob(element);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          );\r\n        }),\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  editJob = (element) => {\r\n    this.setState({\r\n      editindex: element,\r\n    });\r\n    return (\r\n      <form className=\"new\" key={uniqid()} onSubmit={this.submitEdit}>\r\n        <h3>Edit job</h3>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"company\"\r\n          id=\"company\"\r\n          placeholder=\"Company Name\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"position\"\r\n          id=\"position\"\r\n          placeholder=\"Position\"\r\n        ></input>\r\n        <textarea\r\n          onChange={this.handleChange}\r\n          name=\"description\"\r\n          id=\"description\"\r\n          placeholder=\"Description of your job\"\r\n        ></textarea>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"number\"\r\n          min=\"1900\"\r\n          max=\"2099\"\r\n          name=\"beginYear\"\r\n          id=\"beginYear\"\r\n          placeholder=\"Beginning Year\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"number\"\r\n          min=\"1900\"\r\n          max=\"2099\"\r\n          name=\"endYear\"\r\n          id=\"endYear\"\r\n          placeholder=\"Ending Year\"\r\n        ></input>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  createForm = () => {\r\n    return (\r\n      <form className=\"new\" key={uniqid()} onSubmit={this.submitForm}>\r\n        <h3>Add new job</h3>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"company\"\r\n          id=\"company\"\r\n          placeholder=\"Company Name\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"position\"\r\n          id=\"position\"\r\n          placeholder=\"Position\"\r\n        ></input>\r\n        <textarea\r\n          onChange={this.handleChange}\r\n          name=\"description\"\r\n          id=\"description\"\r\n          placeholder=\"Description of your job\"\r\n        ></textarea>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"number\"\r\n          min=\"1900\"\r\n          max=\"2099\"\r\n          name=\"beginYear\"\r\n          id=\"beginYear\"\r\n          placeholder=\"Beginning Year\"\r\n        ></input>\r\n        <input\r\n          onChange={this.handleChange}\r\n          type=\"number\"\r\n          min=\"1900\"\r\n          max=\"2099\"\r\n          name=\"endYear\"\r\n          id=\"endYear\"\r\n          placeholder=\"Ending Year\"\r\n        ></input>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  addForm = () => {\r\n    this.setState({\r\n      forms: [this.createForm()],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"practical\" className=\"component\">\r\n        <h2>Practical information</h2>\r\n        {this.state.jobs}\r\n        {this.state.forms}\r\n        <button id=\"add\" onClick={this.addForm}>\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Practical;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport General from \"./components/General\";\nimport Education from \"./components/Education\";\nimport Practical from \"./components/Practical\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <header>\n      <h1>CV-creator</h1>\n    </header>\n    <div id=\"content\">\n      <General />\n      <Education />\n      <Practical />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}